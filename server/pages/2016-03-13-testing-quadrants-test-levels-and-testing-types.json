{"pageProps":{"source":{"compiledSource":"var u=Object.defineProperty,d=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var l=(e,t,a)=>t in e?u(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,s=(e,t)=>{for(var a in t||(t={}))o.call(t,a)&&l(e,a,t[a]);if(r)for(var a of r(t))i.call(t,a)&&l(e,a,t[a]);return e},p=(e,t)=>d(e,m(t));var h=(e,t)=>{var a={};for(var n in e)o.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(e!=null&&r)for(var n of r(e))t.indexOf(n)<0&&i.call(e,n)&&(a[n]=e[n]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var n=a,{components:e}=n,t=h(n,[\"components\"]);return mdx(MDXLayout,p(s(s({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"WHAT ARE TESTING QUADRANTS ?\")),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"Testing quadrants\"),\", defined by \",mdx(\"a\",s({parentName:\"p\"},{href:\"http://exampler.com/about.html\"}),\"Brian Marick\"),`, align\nthe `,mdx(\"a\",s({parentName:\"p\"},{href:\"http://istqbexamcertification.com/what-are-software-testing-levels/\"}),\"test levels\"),`\nwith the appropriate\n`,mdx(\"a\",s({parentName:\"p\"},{href:\"http://istqbexamcertification.com/what-are-software-test-types/\"}),\"test types\"),` in the\n`,mdx(\"strong\",{parentName:\"p\"},\"Agile methodology\"),\".\"),mdx(\"p\",null,\"The testing quadrants model, \",mdx(\"strong\",{parentName:\"p\"},`helps to ensure that all important test types and test\nlevels are included in the development lifecycle`),`. This model also provides a way to\ndifferentiate and describe the types of tests to all stakeholders, including developers,\ntesters, and business representatives.`),mdx(\"p\",null,`In the testing quadrants, tests can be business (user) or technology (developer) facing.\nSome tests support the work done by the Agile team and confirm software behaviour. Other\ntests can verify the product. Tests can be fully manual, fully automated, a combination\nof manual and automated, or manual but supported by tools.`),mdx(\"p\",null,`The four quadrants are as follows\n`,mdx(\"img\",s({parentName:\"p\"},{src:\"http://res.cloudinary.com/mwhelan/image/upload/v1429257891/teststack/readmeio/AgileTestingQuadrants.png\",alt:null}))),mdx(\"p\",null,`The quadrants are not in any specific order. Also there are no hard and fast rules about\nwhat goes in what quadrant. Teams think through them as they do the release and\niteration planning, so the whole team starts out by thinking about testing.`),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"WHAT DOES EACH QUADRANT MEAN\")),mdx(\"p\",null,`The quadrants largely help the agile team to plan their testing for a project and make\nsure they have all the resources they need to accomplish it successfully .`),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"Q1 - Quadrant1\"),` is a developer lead effort and it is technology facing, the effort\napplied in this quadrant helps to support the scrum team. This involves getting complete\nstructural or conditional unit test coverage, plus,\n`,mdx(\"a\",s({parentName:\"p\"},{href:\"http://istqbexamcertification.com/what-is-component-testing/\"}),\"component testing\"),`\ncoverage as well. This helps to make sure that, `,mdx(\"strong\",{parentName:\"p\"},\"are we building the product right?\"),`\n`,mdx(\"strong\",{parentName:\"p\"},\"NOTE :\"),` with out this quadrant every other quadrant is not that effective and gets\nharder.`),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"Q2 - Quadrant2\"),` Business-facing tests that supports the scrum team as well. This\ninvolves capturing business examples and collaborating with customers to get more\nclarity in asserting the functionality, story testing, API testing, UI based testing\nusing automated tools like selenium. This helps to make sure that, `,mdx(\"strong\",{parentName:\"p\"},`are we building the\nright product?`)),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"Q3 - Quadrant3\"),` This involves recreating actual user experience and have scenario which\nare realistic. This relates to regular sprint demos or Informal demos, involving the\nreal users/Customer support teams and get early and quick feedback.`),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"Q4 - Quadrant4\"),` This is technology facing but involves use of tools to assist in\nunderstanding the behaviours. Memory management, Data migration, Recovery, Test\nenvironments etc, are covered under this quadrant and stories written for it. Popular\n`,mdx(\"strong\",{parentName:\"p\"},\"'ilities' testing\"),` like modifiability, usability, adaptability, reusability,\nsecurity, reliability, availability etc must also be considered as well.`),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"HOW TO USE IT IN AGILE ?\"),` Test planning is not an individual effort and must be\nacknowledged by the whole team at the release planning or iteration planning. At release\nplanning the team must understand and agree to the high level test strategy which\nencompass Unit testing/TDD, ATDD, function/Non functional testing etc - considering all\nquadrants. Identify who should own or do the various type of testing and how best to\naccomplish it, shared responsibility and focus on collaboration is the essence of this\nstep. The team gets to highlight the requirement for any special skills or tools. At\neach iteration planning or execution, tests from any quadrant can be created as story\nand performed.`),mdx(\"p\",null,`No story can be considered as done until testing is completed: Unit testing complete,\nautomated regression tests successful run,customer requirements has been confirmed to be\ncaptured. Doneness in all quadrants achieved !`))}MDXContent.isMDXComponent=!0;\n","scope":{}},"title":"Testing quadrants test levels and testing types","layout":"post","author":"Guru","tags":["testing"],"redirect_from":"/testing-quadrants-test-levels-and-testing-types/"},"__N_SSG":true}