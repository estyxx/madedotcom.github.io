{"pageProps":{"source":{"compiledSource":"var c=Object.defineProperty,g=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var a=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var r=(e,t,o)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,i=(e,t)=>{for(var o in t||(t={}))n.call(t,o)&&r(e,o,t[o]);if(a)for(var o of a(t))l.call(t,o)&&r(e,o,t[o]);return e},h=(e,t)=>g(e,u(t));var p=(e,t)=>{var o={};for(var s in e)n.call(e,s)&&t.indexOf(s)<0&&(o[s]=e[s]);if(e!=null&&a)for(var s of a(e))t.indexOf(s)<0&&l.call(e,s)&&(o[s]=e[s]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var s=o,{components:e}=s,t=p(s,[\"components\"]);return mdx(MDXLayout,h(i(i({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`At Made.com we're unabashed fans of the ELK stack, and I spend a decent amount of my\ntime thinking about how we parse, ship, and store logs.`),mdx(\"p\",null,\"Currently, we use an ELK stack setup that looks like this:\"),mdx(\"p\",null,`Rsyslog receives logs from our Docker containers, via the syslog docker logging driver,\nand from the rest of the system via the journal. We tag the logs at this point (as\napplication, http, or system logs), and normalise them all to the same json format.`),mdx(\"p\",null,`We ship those json logs to an Elasticache Redis instance, and consume them in Logstash.\nFinally, Logstash routes the logs to the correct Elasticsearch index based on their\ntags.`),mdx(\"p\",null,`This is more-or-less a best-practice set up for ELK but Logstash, honestly, is my least\nfavourite part of the stack. Recently I've had some conversations on the Rsyslog mailing\nlist about whether we can replace Logstash entirely, and just use Rsyslog.`),mdx(\"p\",null,\"Why might we want to do that?\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},`RSyslog is really fast. Logstash does a reasonable job of processing our current log\nvolumes, but RSyslog is a couple of orders of magnitude faster\n`,\"[http://www.rsyslog.com/performance-tuning-elasticsearch/]\",` for most use cases. In\nparticular, mmnormalize is lightning fast compared to Logstash's grok. That means I\ncan run smaller, cheaper ingest boxes.`),mdx(\"li\",{parentName:\"ol\"},`Logstash reliability issues. Rsyslog is definitely not a bug-free piece of software,\nbut I know my way around the code base, and I've inadvertently become a maintainer\nof the Redis module. We've had repeated issues where Logstash loses its connection\nto either Redis or Riemann, and failed messages then block the entire pipeline.`),mdx(\"li\",{parentName:\"ol\"},`Simplicity Given that RSyslog has disk-backed queues, maybe we don't need to use\nRedis at all. If we can reliably buffer and forward messages to a central RSyslog\nserver, and then into Elasticsearch, we can drop a component from the pipeline.`)),mdx(\"p\",null,`To test whether that's feasible, I want to build a couple of prototype architectures.\nFirstly I want to try our basic setup but replacing Logstash directly with RSyslog`),mdx(\"p\",null,`Secondly I'd like to try skipping Redis altogether and going directly to a central\nrsyslog server using relp. I suspect this will have better throughput, and lower running\ncosts, without loss in reliability.`),mdx(\"p\",null,`For all of this to really work well, I'm going to have to roll up my sleeves and write\nsome code.`),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},`We'll need GeoIP tagging for our http logs. I've seen this done with both mmexternal\nand table lookup functionality.`),mdx(\"li\",{parentName:\"ol\"},\"I'll need to hack out a Redis input plugin for RSyslog.\"),mdx(\"li\",{parentName:\"ol\"},\"We forward certain logs (anything with a \",\"_\",`metric field, plus ERROR and CRITICALs)\nto Riemann so that we can monitor them and use them for alerting. We'll need a new\nRiemann output module in ryslog.`),mdx(\"li\",{parentName:\"ol\"},`The chief maintainer of RSyslog is interested in writing or harvesting a component\nthat works like Elastic's FileBeats - a simple, lightweight forwarder that just\nreads files and sends logs over the network reliably.`)),mdx(\"p\",null,`I'm going to open source all the prototypes, including Ansible playbooks and Docker\nfiles so that you can play along at home or in the cloud. If you've got any suggestions\nfor other reference architectures or use cases you'd like to see from the REK stack get\nin touch on the mailing list `,\"[http://lists.adiscon.net/mailman/listinfo/rsyslog]\",\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"date":"2016-11-24","title":"Rek it","layout":"post","author":"Bob","tags":["riemann","monitoring","elk"]},"__N_SSG":true}